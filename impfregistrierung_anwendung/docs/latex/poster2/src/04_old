\section*{SQL-Cronjob für die Kalenderlogik}
Damit das System jederzeit aktuelle Terminverfügbarkeiten anzeigt und alte Daten nicht 
unnötig Speicherplatz belegen, wurde eine automatisierte Kalenderlogik in Form eines 
SQL-Cronjobs implementiert.
Die Terminverwaltung erfolgt über eine tägliche, geplante SQL-Prozedur, die zwei 
Hauptaufgaben übernimmt: Das Entfernen abgelaufener Buchungen des Vortags und die 
automatische Generierung neuer Zeitslots für den neuen Tag.
Durch diese Automatisierung wird die Wartung des Systems erheblich erleichtert. Ohne 
diesen Cronjob müssten Mitarbeitende regelmäßig Termine manuell aktualisieren und 
entfernen, was mit einem hohen administrativen Aufwand verbunden wäre. Zudem sorgt die 
automatische Bereinigung der Datenbank dafür, dass keine überflüssigen Einträge die 
Performance beeinträchtigen.
Ein weiterer Vorteil dieser Lösung ist ihre Skalierbarkeit. Da die Terminverwaltung durch 
einen zentralen Cronjob erfolgt und die Zeitslots im Voraus generiert werden, bleibt das 
System auch bei hoher Last stabil. Nutzeranfragen greifen lediglich auf die bereits 
vorbereiteten Daten zu, wodurch keine zusätzliche Last entsteht. Neue Impfzentren können 
problemlos hinzugefügt werden, ohne dass eine Anpassung der Buchungslogik erforderlich ist.
Automatisierte Prozesse sorgen für Konsistenz und Zuverlässigkeit. Durch die tägliche 
Aktualisierung der Termine wird sichergestellt, dass das System stets aktuelle und 
korrekte Daten liefert. Zudem reduziert sich der manuelle Wartungsaufwand, was die 
Skalierbarkeit und langfristige Nachhaltigkeit der Anwendung verbessert. Ohne 
Automatisierung könnten Fehler entstehen, etwa wenn alte Buchungen nicht rechtzeitig 
entfernt oder neue Slots nicht generiert werden.
